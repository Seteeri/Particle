(def 'PI 3.14159265358979323846264338327950288419716939937510582097494459)

(de d-r (A) (*/ 1.0 (*/ A PI    1.0) 180.0))
(de r-d (A) (*/ 1.0 (*/ A 180.0 1.0) PI))

#{
(def 'PATH-MATHC "/home/user/Particle/particle/ext/mathc/libmathc.so")
(def '*mat4-z (native "@" "malloc" 'N 64))
(de mat4-perspective (Fov-Y A N F)
  (struct
    (native PATH-MATHC "mat4_perspective" 'N
      *mat4-z
      (cons Fov-Y -1.0)
      (cons A     -1.0)
      (cons N     -1.0)
      (cons F     -1.0))
    (-1.0 . 16)))
}#
# Untested
(de pers (Fov-Y A N F)
  (let Thfy (*/ 1.0 
                1.0 
                (native "@" "tan" 1.0 
                        (cons (*/ Fov-Y 0.5 1.0) 1.0)))
    (list (*/ (*/ 1.0 1.0 A) Thfy 1.0)
          0.0
          0.0
          0.0
          0.0
          (*/ 1.0 1.0 Thfy)
          0.0
          0.0
          0.0
          0.0
          (*/ 1.0 F (- N F))
          -1.0
          0.0
          0.0
          (*/ 1.0 (- (*/ F N 1.0))
                  (- F N))
          0.0)))


(de mat4-ortho (L R B Tt N F)
  (list (*/ 1.0 2.0 (- R L))
        0.0
        0.0
        0.0
        0.0
        (*/ 1.0 2.0 (- Tt B))
        0.0
        0.0
        0.0
        0.0
        (*/ 1.0 -2.0 (- F N))
        0.0
        (- (*/ 1.0 (+ R L)  (- R L)))
        (- (*/ 1.0 (+ Tt B) (- Tt B)))
        (- (*/ 1.0 (+ F N)  (- F N)))
        1.0))


(de mat4-mul (A B)
  (let ((a1  a2  a3  a4
         a5  a6  a7  a8 
         a9  a10 a11 a12 
         a13 a14 a15 a16) A
        (b1  b2  b3  b4
         b5  b6  b7  b8 
         b9  b10 b11 b12 
         b13 b14 b15 b16) B)
    (list (+ (*/ a1 b1  1.0) (*/ a5 b2  1.0) (*/ a9  b3  1.0) (*/ a13 b4  1.0))
          (+ (*/ a2 b1  1.0) (*/ a6 b2  1.0) (*/ a10 b3  1.0) (*/ a14 b4  1.0))
          (+ (*/ a3 b1  1.0) (*/ a7 b2  1.0) (*/ a11 b3  1.0) (*/ a15 b4  1.0))
          (+ (*/ a4 b1  1.0) (*/ a8 b2  1.0) (*/ a12 b3  1.0) (*/ a16 b4  1.0))
          
          (+ (*/ a1 b5  1.0) (*/ a5 b6  1.0) (*/ a9  b7  1.0) (*/ a13 b8  1.0))
          (+ (*/ a2 b5  1.0) (*/ a6 b6  1.0) (*/ a10 b7  1.0) (*/ a14 b8  1.0))
          (+ (*/ a3 b5  1.0) (*/ a7 b6  1.0) (*/ a11 b7  1.0) (*/ a15 b8  1.0))
          (+ (*/ a4 b5  1.0) (*/ a8 b6  1.0) (*/ a12 b7  1.0) (*/ a16 b8  1.0))
          
          (+ (*/ a1 b9  1.0) (*/ a5 b10 1.0) (*/ a9  b11 1.0) (*/ a13 b12 1.0))
          (+ (*/ a2 b9  1.0) (*/ a6 b10 1.0) (*/ a10 b11 1.0) (*/ a14 b12 1.0))
          (+ (*/ a3 b9  1.0) (*/ a7 b10 1.0) (*/ a11 b11 1.0) (*/ a15 b12 1.0))
          (+ (*/ a4 b9  1.0) (*/ a8 b10 1.0) (*/ a12 b11 1.0) (*/ a16 b12 1.0))
          
          (+ (*/ a1 b13 1.0) (*/ a5 b14 1.0) (*/ a9  b15 1.0) (*/ a13 b16 1.0))
          (+ (*/ a2 b13 1.0) (*/ a6 b14 1.0) (*/ a10 b15 1.0) (*/ a14 b16 1.0))
          (+ (*/ a3 b13 1.0) (*/ a7 b14 1.0) (*/ a11 b15 1.0) (*/ a15 b16 1.0))
          (+ (*/ a4 b13 1.0) (*/ a8 b14 1.0) (*/ a12 b15 1.0) (*/ a16 b16 1.0)))))


(de mat4-rx (F)
  (let (C (native "@" "cos" 1.0 (cons F 1.0))
        S (native "@" "sin" 1.0 (cons F 1.0)))
    (list 1.0  0.0    0.0  0.0
          0.0  C      S    0.0
          0.0  (- S)  C    0.0
          0.0  0.0    0.0  1.0)))

(de mat4-ry (F)
  (let (C (native "@" "cos" 1.0 (cons F 1.0))
        S (native "@" "sin" 1.0 (cons F 1.0)))
    (list C    0.0  (- S)  0.0
          0.0  1.0  0.0    0.0
          S    0.0  C      0.0
          0.0  0.0  0.0    1.0)))


(de mat4-rz (F)
  (let (C (native "@" "cos" 1.0 (cons F 1.0))
        S (native "@" "sin" 1.0 (cons F 1.0)))
    (list C      S    0.0  0.0
          (- S)  C    0.0  0.0
          0.0    0.0  1.0  0.0
          0.0    0.0  0.0  1.0)))


(de mat4-sca (V)
  (list (car V) 0.0      0.0       0.0
        0.0     (cadr V) 0.0       0.0
        0.0     0.0      (caddr V) 0.0
        0.0     0.0      0.0       1.0))

        
(de mat4-tra (V)
  (list 1.0     0.0      0.0       0.0
        0.0     1.0      0.0       0.0
        0.0     0.0      1.0       0.0
        (car V) (cadr V) (caddr V) 1.0))


(de mat4-id ()
  (list 1.0 0.0 0.0 0.0
        0.0 1.0 0.0 0.0
        0.0 0.0 1.0 0.0
        0.0 0.0 0.0 1.0))

        
(de mat4-inv (M)
  #{
  
    0,0=1    0,1=2    0,2=3    0,3=4
    1,0=5    1,1=6    1,2=7    1,3=8
    2,0=9    2,1=10   2,2=11   2,3=12
    3,0=13   3,1=14   3,2=15   3,3=16  
  
  }#
  
  (let ((M1  M2  M3  M4
         M5  M6  M7  M8 
         M9  M10 M11 M12 
         M13 M14 M15 M16) M
         
        S1 (- (*/ M1 M6 1.0) (*/ M5 M2 1.0))
        S2 (- (*/ M1 M7 1.0) (*/ M5 M3 1.0))
        S3 (- (*/ M1 M8 1.0) (*/ M5 M4 1.0))
        S4 (- (*/ M2 M7 1.0) (*/ M6 M3 1.0))
        S5 (- (*/ M2 M8 1.0) (*/ M6 M4 1.0))
        S6 (- (*/ M3 M8 1.0) (*/ M7 M4 1.0))
           
        C1 (- (*/ M9  M14 1.0) (*/ M13 M10 1.0))
        C2 (- (*/ M9  M15 1.0) (*/ M13 M11 1.0))
        C3 (- (*/ M9  M16 1.0) (*/ M13 M12 1.0))
        C4 (- (*/ M10 M15 1.0) (*/ M14 M11 1.0))
        C5 (- (*/ M10 M16 1.0) (*/ M14 M12 1.0))
        C6 (- (*/ M11 M16 1.0) (*/ M15 M12 1.0))
        
        I (*/ 1.0 1.0
                  (+ (- (+ (- (*/ S1 C6 1.0)
                              (*/ S2 C5 1.0))
                           (*/ S3 C4 1.0)
                           (*/ S4 C3 1.0))
                        (*/ S5 C2 1.0))
                     (*/ S6 C1 1.0))))
                     
      (list (*/ (+ (- (*/    M6   C6 1.0) (*/ M7  C5 1.0)) (*/ M8  C4 1.0)) I 1.0)
            (*/ (- (+ (*/ (- M2)  C6 1.0) (*/ M3  C5 1.0)) (*/ M4  C4 1.0)) I 1.0)
            (*/ (+ (- (*/    M14  S6 1.0) (*/ M15 S5 1.0)) (*/ M16 S4 1.0)) I 1.0)
            (*/ (- (+ (*/ (- M10) S6 1.0) (*/ M11 S5 1.0)) (*/ M12 S4 1.0)) I 1.0)
            (*/ (- (+ (*/ (- M5 ) C6 1.0) (*/ M7  C3 1.0)) (*/ M8  C2 1.0)) I 1.0)
            (*/ (+ (- (*/    M1   C6 1.0) (*/ M3  C3 1.0)) (*/ M4  C2 1.0)) I 1.0)
            (*/ (- (+ (*/ (- M13) S6 1.0) (*/ M15 S3 1.0)) (*/ M16 S2 1.0)) I 1.0)
            (*/ (+ (- (*/    M9   S6 1.0) (*/ M11 S3 1.0)) (*/ M12 S2 1.0)) I 1.0)
            (*/ (+ (- (*/    M5   C5 1.0) (*/ M6  C3 1.0)) (*/ M8  C1 1.0)) I 1.0)
            (*/ (- (+ (*/ (- M1 ) C5 1.0) (*/ M2  C3 1.0)) (*/ M4  C1 1.0)) I 1.0)
            (*/ (+ (- (*/    M13  S5 1.0) (*/ M14 S3 1.0)) (*/ M16 S1 1.0)) I 1.0)
            (*/ (- (+ (*/ (- M9 ) S5 1.0) (*/ M10 S3 1.0)) (*/ M12 S1 1.0)) I 1.0)
            (*/ (- (+ (*/ (- M5 ) C4 1.0) (*/ M6  C2 1.0)) (*/ M7  C1 1.0)) I 1.0)
            (*/ (+ (- (*/    M1   C4 1.0) (*/ M2  C2 1.0)) (*/ M3  C1 1.0)) I 1.0)
            (*/ (- (+ (*/ (- M13) S4 1.0) (*/ M14 S2 1.0)) (*/ M15 S1 1.0)) I 1.0)
            (*/ (+ (- (*/    M9   S4 1.0) (*/ M10 S2 1.0)) (*/ M11 S1 1.0)) I 1.0))))


(de mat4-mul-v4 (M V)
  (let ((M1  M2  M3  M4
         M5  M6  M7  M8 
         M9  M10 M11 M12 
         M13 M14 M15 M16) M
        (X Y Z W) V)
    (list (+ (*/ M1 X 1.0) (*/ M5 Y 1.0) (*/ M9  Z 1.0)  (*/ M13 W 1.0))
          (+ (*/ M2 X 1.0) (*/ M6 Y 1.0) (*/ M10  Z 1.0) (*/ M14 W 1.0))
          (+ (*/ M3 X 1.0) (*/ M7 Y 1.0) (*/ M11 Z 1.0)  (*/ M15 W 1.0))
          (+ (*/ M4 X 1.0) (*/ M8 Y 1.0) (*/ M12 Z 1.0)  (*/ M16 W 1.0)))))
            

(de unproj (Win ModelView Proj View)
  # v3, m4, m4, v4
      
  (let (V (list (- (*/ (*/ 1.0 (- (get Win 1) (get View 1)) (get View 3)) 2.0 1.0) 1.0)
                (- (*/ (*/ 1.0 (- (get Win 2) (get View 2)) (get View 4)) 2.0 1.0) 1.0)
                (- (*/ (get Win 3) 2.0 1.0) 1.0)
                1.0)
        Inv (mat4-mul ModelView Proj)
        (X Y Z W) (mat4-mul-v4 Inv V))
    (list (*/ 1.0 X W)
          (*/ 1.0 Y W)
          (*/ 1.0 Z W))))
  
